security:
    encoders:
        GEMA\gemaBundle\Entity\Usuario: { algorithm: sha512, iterations: 5 }  
        
        Symfony\Component\Security\Core\User\User: plaintext 
#        Symfony\Component\Security\Core\User\User: { algorithm: sha512, iterations: 5 } 

    role_hierarchy:
        ROLE_ADMINISTRADOR:    ROLE_USER
        ROLE_ALMACENERO:       ROLE_USER
        ROLE_MANTENIMIENTO:   ROLE_USER        
        ROLE_OPERACIONES:   ROLE_USER        
        ROLE_SUPER_ADMIN: [ROLE_USER,ROLE_MANTENIMIENTO,ROLE_ALMACENERO,ROLE_ADMINISTRADOR,ROLE_OPERACIONES, ROLE_ALLOWED_TO_SWITCH]

    providers:
        unidos:
            chain:
                providers: [in_memory, base_datos]
        in_memory:
            memory:
                users:
                    almacenero:  { password: a, roles: [ 'ROLE_ALMACENERO' ] }
                    administrador:  { password: a, roles: [ 'ROLE_ADMINISTRADOR' ] }
                    mantenimiento:  { password: a, roles: [ 'ROLE_MANTENIMIENTO' ] }
                    admin: { password: a, roles: [ 'ROLE_SUPER_ADMIN' ] }
        base_datos:
                entity: { class: GEMA\gemaBundle\Entity\Usuario, property: usuario }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/login$
            anonymous: ~

        area_asegurada:
            pattern:    ^/
            remember_me:
                key: GEMASESSION
                lifetime: 1
            form_login:
                check_path: gema_login_check
                login_path: gema_login
            logout:
                path:   gema_logout
                target: gema_login
#               anonymous: ~
#            http_basic:
#                realm: "Area Asegurada"
        

    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/loggedcheck, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/rol/*, roles: [ROLE_ADMINISTRADOR] }
        - { path: ^/persona/*, roles: [ROLE_ADMINISTRADOR] }
        - { path: ^/usuario/*, roles: [ROLE_ADMINISTRADOR] }
        - { path: ^/traza/*, roles: [ROLE_ADMINISTRADOR] }
        - { path: ^/area/*, roles: [ROLE_ADMINISTRADOR] }
        - { path: ^/tipoactivo/*, roles: [ROLE_ADMINISTRADOR] }
        - { path: ^/herramienta/*, roles: [ROLE_ADMINISTRADOR,ROLE_MANTENIMIENTO] }
        - { path: ^/insumo/*, roles: [ROLE_ADMINISTRADOR,ROLE_MANTENIMIENTO] }
        - { path: ^/repuesto/*, roles: [ROLE_ADMINISTRADOR,ROLE_MANTENIMIENTO] }
        - { path: ^/tipoprioridad/*, roles: [ROLE_ADMINISTRADOR] }
        - { path: ^/proveedor/*, roles: [ROLE_ALMACENERO] }
        - { path: ^/factura/*, roles: [ROLE_ALMACENERO] }
        - { path: ^/activo/*, roles: [ROLE_ALMACENERO,ROLE_OPERACIONES] }
        - { path: ^/procedimiento/*, roles: [ROLE_MANTENIMIENTO] }
        - { path: ^/ordentrabajo/*, roles: [ROLE_MANTENIMIENTO] }
        - { path: ^/planmtto/*, roles: [ROLE_MANTENIMIENTO] }
        - { path: ^/accion/*, roles: [ROLE_MANTENIMIENTO] }
        - { path: ^/*, roles:  ROLE_USER}
        
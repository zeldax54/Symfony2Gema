<?php

namespace GEMA\gemaBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;
use Symfony\Component\HttpFoundation\Request;
use DateTime;

/**
 * OrdenTrabajoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrdenTrabajoRepository extends EntityRepository {

    public function listarDQL() {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $qb->addSelect('O')
                ->from($this->getClassName(), 'O');
        return $qb;
    }

    public function filtrar(Request $request) {
        $qb = new QueryBuilder($this->getEntityManager());
        $qb
                ->select("O,P")
                ->from($this->getClassName(), "O")
                ->leftJoin("O.planMtto", "P");

        if ($request->request->get("searchPhrase") != null) {
            $search = $request->request->get("searchPhrase");
            $qb->orWhere($qb->expr()->like("O.nombre", $qb->expr()->literal("%" . $search . "%")));
            $qb->orWhere($qb->expr()->like("P.nombre", $qb->expr()->literal("%" . $search . "%")));
        }
        if ($request->request->get("sort") != null) {
            $orden = $request->request->get("sort");
            foreach ($orden as $key => $value) {
                $qb->orderBy("O." . $key, $value);
            }
        }
        return $qb;
    }

    public function filtrarPersonas(Request $request) {
        $qb = new QueryBuilder($this->getEntityManager());
        $qb
                ->select("P,PP,OT")
                ->from("Persona", "P")
                ->leftJoin("P.proPers", "PP")
                ->leftJoin("PP.procedimiento", "PRO")
                ->leftJoin("PRO.procedimiento", "PRO")
        ;

        if ($request->request->get("searchPhrase") != null) {
            $id = $request->request->get("idOT");
            $qb->andWhere($qb->expr()->eq("P.id", $qb->expr()->literal($id)));
        }
        if ($request->request->get("sort") != null) {
            $orden = $request->request->get("sort");
            foreach ($orden as $key => $value) {
                $qb->orderBy("O." . $key, $value);
            }
        }
        return $qb;
    }

    public function ordenFechaCercana($dias) {
        $qb = new QueryBuilder($this->getEntityManager());
        $qb
                ->select("A")
                ->from($this->getClassName(), "A")
                ->leftJoin("A.planMtto", "AP");
        $hoy = new DateTime("today");
        $fin = new DateTime("+" . $dias . " day");

        $qb->andWhere($qb->expr()->lte("AP.fecha", $qb->expr()->literal($fin->format('Y-m-d h:m:s'))));
        $qb->andWhere($qb->expr()->gte("AP.fecha", $qb->expr()->literal($hoy->format("Y-m-d h:m:s"))));
        $qb->andWhere($qb->expr()->eq("A.cumplida", ':key'));
        $qb->setParameter('key', false);
        return $qb->getQuery()->getResult();
    }

}

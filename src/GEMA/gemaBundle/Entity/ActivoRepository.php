<?php

namespace GEMA\gemaBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;
use Symfony\Component\HttpFoundation\Request;
use DateTime;

/**
 * ActivoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ActivoRepository extends EntityRepository {

    public function listarDQL() {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $qb->addSelect('A')
                ->from($this->getClassName(), 'A');
        return $qb;
    }

    public function filtrar(Request $request) {
        $qb = new QueryBuilder($this->getEntityManager());
        $qb
//                ->select("A,F,TA,AR")
                ->select("A,F,TA,AR")
                ->from($this->getClassName(), "A")
                ->leftJoin("A.factura", "F")
                ->leftJoin("A.tipoActivo", "TA")
                ->leftJoin("A.area", "AR");

        if ($request->request->get("searchPhrase") != null) {
            $search = $request->request->get("searchPhrase");
            $qb->where($qb->expr()->like("A.noInventario", $qb->expr()->literal("%" . $search . "%")));
            $qb->where($qb->expr()->like("A.centroCosto", $qb->expr()->literal("%" . $search . "%")));
            $qb->orwhere($qb->expr()->like("A.marca", $qb->expr()->literal("%" . $search . "%")));
            $qb->orwhere($qb->expr()->like("A.modelo", $qb->expr()->literal("%" . $search . "%")));
            $qb->orWhere($qb->expr()->like("F.codigo", $qb->expr()->literal("%" . $search . "%")));
            $qb->orWhere($qb->expr()->like("TA.codificador", $qb->expr()->literal("%" . $search . "%")));
            $qb->orWhere($qb->expr()->like("TA.tipoActivo", $qb->expr()->literal("%" . $search . "%")));
            $qb->orWhere($qb->expr()->like("AR.nombre", $qb->expr()->literal("%" . $search . "%")));
        }
        if ($request->request->get("sort") != null) {
            $orden = $request->request->get("sort");
            foreach ($orden as $key => $value) {
                $qb->orderBy("A." . $key, $value);
            }
        }
        return $qb;
    }

    public function activoFechaCercana($dias) {
        $qb = new QueryBuilder($this->getEntityManager());
        $qb
                ->select("A")
                ->from($this->getClassName(), "A");
        $hoy = new DateTime("today");
        $fin = new DateTime("+" . $dias . " day");
        $qb->andWhere($qb->expr()->lte("A.fechaProximoMtto", $qb->expr()->literal($fin->format('Y-m-d h:m:s'))));
        $qb->andWhere($qb->expr()->gte("A.fechaProximoMtto", $qb->expr()->literal($hoy->format("Y-m-d h:m:s"))));

        return $qb->getQuery()->getResult();
    }

}
